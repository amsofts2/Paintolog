@model Paintolog.Models.ChangePasswordViewModel

<div class="container d-flex align-items-center justify-content-center pt-5 pb-5">
    <div class="row col-6 about-card">
        <h1 class="pb-3">Change Password</h1>
        @using (Html.BeginForm("resetPassword", "users", FormMethod.Post))
        {
            @Html.HiddenFor(m => m.Token)
            @Html.AntiForgeryToken()
            <div class="mb-4">
                <label for="newPassword" class="form-label">New Password *</label>
                <div class="input-group">
                    @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", id = "newPassword", placeholder = "Enter new password" })
                    <span class="input-group-text">
                        <i class="bi bi-eye-slash" id="toggleNewPassword"></i>
                    </span>
                </div>
                <span id="newPasswordError" class="text-danger d-none"></span>
            </div>

            <div class="mb-4">
                <label for="confirmPassword" class="form-label">Confirm Password *</label>
                <div class="input-group">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", id = "confirmPassword", placeholder = "Confirm new password" })
                    <span class="input-group-text">
                        <i class="bi bi-eye-slash" id="toggleConfirmPassword"></i>
                    </span>
                </div>
                <span id="confirmPasswordError" class="text-danger d-none"></span>
            </div>

            <button type="submit" id="submitButton" class="btn btn-primary">Change Password</button>
        }

        @if (!string.IsNullOrWhiteSpace(ViewBag.ResultMessage.ToString()))
        {
            <span class="text-danger mt-3">@ViewBag.ResultMessage.ToString()</span>
        }
    </div>

</div>
@section Scripts
{
    <script>
        $(document).ready(function () {
            $("#submitButton").click(function (e) {
                const newPassword = $("#newPassword").val();
                const confirmPassword = $("#confirmPassword").val();
                $("#confirmPasswordError").addClass("d-none");
                $("#newPasswordError").addClass("d-none");

                if (newPassword == '') {
                    e.preventDefault();
                    $("#newPasswordError").removeClass("d-none");
                    $("#newPasswordError").text("New Password is required!");
                }
                else {
                    $("#newPasswordError").addClass("d-none");
                }
                if (confirmPassword == '') {
                    e.preventDefault();
                    $("#confirmPasswordError").removeClass("d-none");
                    $("#confirmPasswordError").text("Confirm Password is required!");
                }
                else {
                    $("#confirmPasswordError").addClass("d-none");
                }

                if (newPassword.length < 6) {
                    e.preventDefault();
                    $("#newPasswordError").removeClass("d-none");
                    $("#newPasswordError").text("New Password length should be at least 6 characters!");
                }
                else {
                    $("#newPasswordError").addClass("d-none");
                }

                if (newPassword != '' && confirmPassword != '') {
                    if (newPassword !== confirmPassword) {
                        e.preventDefault(); // Prevent form submission
                        $("#confirmPasswordError").text("Passwords do not match!");
                        $("#confirmPasswordError").removeClass("d-none");
                    } else {
                        $("#confirmPasswordError").addClass("d-none");
                    }
                }
            });
        });
    </script>

    <script>

        function togglePasswordVisibility(toggleButtonId, inputFieldId) {
            const toggleButton = document.querySelector(`#${toggleButtonId}`);
            const inputField = document.querySelector(`#${inputFieldId}`);

            toggleButton.addEventListener('click', () => {
                const type = inputField.getAttribute('type') === 'password' ? 'text' : 'password';
                inputField.setAttribute('type', type);
                toggleButton.classList.toggle('bi-eye');
                toggleButton.classList.toggle('bi-eye-slash');
            });
        }

        // Attach toggle functionality
        togglePasswordVisibility('toggleNewPassword', 'newPassword');
        togglePasswordVisibility('toggleConfirmPassword', 'confirmPassword');
    </script>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
}



